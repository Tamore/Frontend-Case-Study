"use client"
"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/container-portal.tsx
var container_portal_exports = {};
__export(container_portal_exports, {
  ContainerPortal: () => ContainerPortal
});
module.exports = __toCommonJS(container_portal_exports);
var import_utils2 = require("@yamada-ui/utils");
var import_react = require("react");
var import_react_dom = require("react-dom");

// src/portal-provider.tsx
var import_utils = require("@yamada-ui/utils");
var [PortalProvider, usePortal] = (0, import_utils.createContext)({
  name: "PortalContext",
  strict: false
});

// src/container-portal.tsx
var import_jsx_runtime = require("react/jsx-runtime");
var ContainerPortal = ({
  appendToParentPortal,
  children,
  containerRef
}) => {
  const parent = containerRef.current;
  const host = parent != null ? parent : typeof window !== "undefined" ? document.body : void 0;
  const portal = (0, import_react.useMemo)(() => {
    if (!parent) return;
    const { ownerDocument } = parent;
    const node = ownerDocument.createElement("div");
    node.className = "ui-portal";
    return node;
  }, [parent]);
  const [, forceUpdate] = (0, import_react.useState)({});
  (0, import_utils2.useSafeLayoutEffect)(() => forceUpdate({}), []);
  (0, import_utils2.useSafeLayoutEffect)(() => {
    if (!portal || !host) return;
    host.appendChild(portal);
    return () => {
      host.removeChild(portal);
    };
  }, [portal, host]);
  return host && portal ? (0, import_react_dom.createPortal)(
    /* @__PURE__ */ (0, import_jsx_runtime.jsx)(PortalProvider, { value: appendToParentPortal ? portal : null, children }),
    portal
  ) : null;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ContainerPortal
});
//# sourceMappingURL=container-portal.js.map