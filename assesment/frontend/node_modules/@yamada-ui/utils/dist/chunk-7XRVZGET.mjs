// src/number.ts
function toNumber(n) {
  const num = parseFloat(n);
  return typeof num !== "number" || Number.isNaN(num) ? 0 : num;
}
function toPrecision(n, precision) {
  n = toNumber(n);
  const scale = 10 ** (precision != null ? precision : 10);
  n = Math.round(n * scale) / scale;
  return precision ? n.toFixed(precision) : n.toString();
}
function countDecimal(n) {
  if (!Number.isFinite(n)) return 0;
  let e = 1;
  let p = 0;
  while (Math.round(n * e) / e !== n) {
    e *= 10;
    p += 1;
  }
  return p;
}
function roundNumberToStep(n, from, step) {
  const nextValue = Math.round((n - from) / step) * step + from;
  const precision = countDecimal(step);
  return toPrecision(nextValue, precision);
}
function valueToPercent(n, min, max) {
  return (n - min) * 100 / (max - min);
}
function percentToValue(n, min, max) {
  return (max - min) * n + min;
}
function clampNumber(n, min, max) {
  return Math.min(Math.max(n, min), max);
}

export {
  toNumber,
  toPrecision,
  countDecimal,
  roundNumberToStep,
  valueToPercent,
  percentToValue,
  clampNumber
};
//# sourceMappingURL=chunk-7XRVZGET.mjs.map