"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/string.ts
var string_exports = {};
__export(string_exports, {
  antonym: () => antonym,
  escape: () => escape,
  toCamelCase: () => toCamelCase,
  toKebabCase: () => toKebabCase,
  toPascalCase: () => toPascalCase,
  toTitleCase: () => toTitleCase,
  transformSize: () => transformSize
});
module.exports = __toCommonJS(string_exports);
function escape(value, replaceValue = "") {
  return value.replace(/\s+/g, replaceValue);
}
function antonym(value) {
  switch (value) {
    case "top":
      return "bottom";
    case "bottom":
      return "top";
    case "left":
      return "right";
    case "right":
      return "left";
    case "start":
      return "end";
    case "end":
      return "start";
    case "x":
      return "y";
    case "y":
      return "x";
    case "enter":
      return "exit";
    case "exit":
      return "enter";
    case "vertical":
      return "horizontal";
    case "horizontal":
      return "vertical";
    case "up":
      return "down";
    case "down":
      return "up";
    case "block":
      return "inline";
    case "inline":
      return "block";
    default:
      return value;
  }
}
var sizeMap = [
  "9xs",
  "8xs",
  "7xs",
  "6xs",
  "5xs",
  "4xs",
  "3xs",
  "2xs",
  "xs",
  "sm",
  "md",
  "normal",
  "lg",
  "xl",
  "2xl",
  "3xl",
  "4xl",
  "5xl",
  "6xl",
  "7xl",
  "8xl",
  "9xl"
];
function transformSize(token, value, omitTokens = ["normal"]) {
  if (!token) return void 0;
  let resolvedSizeMap = sizeMap;
  if (omitTokens)
    resolvedSizeMap = sizeMap.filter((size2) => !omitTokens.includes(size2));
  const index = resolvedSizeMap.indexOf(token);
  const size = resolvedSizeMap[index + value];
  return size != null ? size : token;
}
function toCamelCase(value) {
  return value.toLowerCase().replace(/[_-](.)/g, (_, val) => val.toUpperCase());
}
function toPascalCase(value) {
  return toCamelCase(value).replace(/^(.)/, (_, val) => val.toUpperCase());
}
function toKebabCase(value) {
  return value.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, "$1-$2").toLowerCase().replace(/^-/, "");
}
function toTitleCase(value) {
  return value.replace(/([A-Z])/g, " $1").replace(/[_-](.)/g, (_, val) => ` ${val.toUpperCase()}`).replace(/^./, (str) => str.toUpperCase()).trim();
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  antonym,
  escape,
  toCamelCase,
  toKebabCase,
  toPascalCase,
  toTitleCase,
  transformSize
});
//# sourceMappingURL=string.js.map